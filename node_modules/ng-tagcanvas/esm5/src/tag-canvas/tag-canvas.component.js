/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Input, ElementRef, ViewChild, Output, EventEmitter } from "@angular/core";
import { v4 as uuid } from 'uuid';
var TagCanvasComponent = /** @class */ (function () {
    function TagCanvasComponent(elementRef) {
        this.elementRef = elementRef;
        this._instanceId = uuid();
        this.canvasId = "canvas-" + this._instanceId;
        this.tagListId = "tags-" + this._instanceId;
        this.defaultOptions = {
            textFont: null,
            textColour: null,
            weightFrom: 'data-weight' // TODO: Hide this field from external modules
        };
        this.tagClick = new EventEmitter();
    }
    Object.defineProperty(TagCanvasComponent.prototype, "options", {
        get: /**
         * @return {?}
         */
        function () {
            return this._options;
        },
        // TODO: Add stretch (boolean) input
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._options = value;
            this.start();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    TagCanvasComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        var /** @type {?} */ canvasElement = /** @type {?} */ (this.canvas.nativeElement);
        canvasElement.width = Math.round(canvasElement.clientWidth);
        canvasElement.height = Math.round(canvasElement.clientHeight);
        var /** @type {?} */ style = window.getComputedStyle(this.elementRef.nativeElement);
        this.defaultOptions.textHeight = parseFloat(style['font-size']);
        this.start();
    };
    /**
     * @return {?}
     */
    TagCanvasComponent.prototype.start = /**
     * @return {?}
     */
    function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var mergedOptions;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        mergedOptions = Object.assign({}, this.defaultOptions, this._options);
                        return [4 /*yield*/, blinkEyes()];
                    case 1:
                        _a.sent();
                        TagCanvas.Start(this.canvasId, this.tagListId, mergedOptions);
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * @return {?}
     */
    TagCanvasComponent.prototype.update = /**
     * @return {?}
     */
    function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, blinkEyes()];
                    case 1:
                        _a.sent();
                        TagCanvas.Update(this.canvasId);
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * @return {?}
     */
    TagCanvasComponent.prototype.ngDoCheck = /**
     * @return {?}
     */
    function () {
        var /** @type {?} */ tagListState = JSON.stringify(this.tags.map(function (_a) {
            var text = _a.text, weight = _a.weight;
            return [text, weight];
        })); // TODO: Improve performance, use KeyValueDiffer/IterableDiffer
        if (this._previousTagListState !== tagListState) {
            this._previousTagListState = tagListState;
            this.update();
        }
    };
    /**
     * @return {?}
     */
    TagCanvasComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        TagCanvas.Delete(this.canvasId);
    };
    TagCanvasComponent.decorators = [
        { type: Component, args: [{
                    selector: 'tag-canvas',
                    template: "<canvas #canvas id=\"{{ canvasId }}\"></canvas>\n<div id=\"{{ tagListId }}\" class=\"tag-container\">\n\t<a href=\"javascript:void(0)\" *ngFor=\"let tag of tags\"\n\t\t[attr.data-weight]=\"tag.weight\" (click)=\"tagClick.next(tag)\">{{ tag.text }}</a>\n</div>\n",
                    styles: [":host{display:block}canvas{display:block;width:100%;height:100%}.tag-container{display:none}.tag-container>a{font-family:inherit!important;color:inherit!important;font-size:inherit!important;font-weight:inherit!important}"]
                },] },
    ];
    /** @nocollapse */
    TagCanvasComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    TagCanvasComponent.propDecorators = {
        tags: [{ type: Input }],
        options: [{ type: Input }],
        tagClick: [{ type: Output }],
        canvas: [{ type: ViewChild, args: ['canvas',] }]
    };
    return TagCanvasComponent;
}());
export { TagCanvasComponent };
function TagCanvasComponent_tsickle_Closure_declarations() {
    /** @type {?} */
    TagCanvasComponent.prototype._instanceId;
    /** @type {?} */
    TagCanvasComponent.prototype.canvasId;
    /** @type {?} */
    TagCanvasComponent.prototype.tagListId;
    /** @type {?} */
    TagCanvasComponent.prototype.defaultOptions;
    /** @type {?} */
    TagCanvasComponent.prototype.canvasWidth;
    /** @type {?} */
    TagCanvasComponent.prototype.canvasHeight;
    /** @type {?} */
    TagCanvasComponent.prototype._options;
    /** @type {?} */
    TagCanvasComponent.prototype.tags;
    /** @type {?} */
    TagCanvasComponent.prototype.tagClick;
    /** @type {?} */
    TagCanvasComponent.prototype.canvas;
    /** @type {?} */
    TagCanvasComponent.prototype._previousTagListState;
    /** @type {?} */
    TagCanvasComponent.prototype.elementRef;
}
/**
 * \@description Waits for change detection cycle
 * @return {?} Promise<void>
 */
function blinkEyes() {
    return tslib_1.__awaiter(this, void 0, void 0, function () {
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, new Promise(function (resolve) { return setTimeout(function () { return resolve(); }); })];
                case 1:
                    _a.sent();
                    return [2 /*return*/];
            }
        });
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFnLWNhbnZhcy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy10YWdjYW52YXMvIiwic291cmNlcyI6WyJzcmMvdGFnLWNhbnZhcy90YWctY2FudmFzLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBaUIsU0FBUyxFQUFXLEtBQUssRUFBYSxVQUFVLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDakksT0FBTyxFQUFFLEVBQUUsSUFBSSxJQUFJLEVBQUUsTUFBTSxNQUFNLENBQUM7O0lBb0Q5Qiw0QkFBb0IsVUFBc0I7UUFBdEIsZUFBVSxHQUFWLFVBQVUsQ0FBWTsyQkFyQ1gsSUFBSSxFQUFFO3dCQUVqQixZQUFVLElBQUksQ0FBQyxXQUFhO3lCQUMzQixVQUFRLElBQUksQ0FBQyxXQUFhOzhCQUVIO1lBQ3hDLFFBQVEsRUFBRSxJQUFJO1lBQ2QsVUFBVSxFQUFFLElBQUk7WUFDaEIsVUFBVSxFQUFFLGFBQWE7U0FDNUI7d0JBdUI2QixJQUFJLFlBQVksRUFBRTtLQU8vQztJQWxCRCxzQkFDSSx1Q0FBTzs7OztRQUtYO1lBQ0ksTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7U0FDeEI7UUFWRCxvQ0FBb0M7Ozs7O1FBRXBDLFVBQ1ksS0FBdUI7WUFDL0IsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7WUFDdEIsSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDO1NBQ2hCOzs7T0FBQTs7OztJQWdCRCw0Q0FBZTs7O0lBQWY7UUFDSSxxQkFBSSxhQUFhLHFCQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsYUFBa0MsQ0FBQSxDQUFDO1FBQ25FLGFBQWEsQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxhQUFhLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDNUQsYUFBYSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUU5RCxxQkFBSSxLQUFLLEdBQUcsTUFBTSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDbkUsSUFBSSxDQUFDLGNBQWMsQ0FBQyxVQUFVLEdBQUcsVUFBVSxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDO1FBRWhFLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztLQUNoQjs7OztJQUVLLGtDQUFLOzs7SUFBWDs7Ozs7O3dCQUNRLGFBQWEsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxJQUFJLENBQUMsY0FBYyxFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQzt3QkFDMUUscUJBQU0sU0FBUyxFQUFFLEVBQUE7O3dCQUFqQixTQUFpQixDQUFDO3dCQUNsQixTQUFTLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLFNBQVMsRUFBRSxhQUFhLENBQUMsQ0FBQzs7Ozs7S0FDakU7Ozs7SUFFSyxtQ0FBTTs7O0lBQVo7Ozs7NEJBQ0kscUJBQU0sU0FBUyxFQUFFLEVBQUE7O3dCQUFqQixTQUFpQixDQUFDO3dCQUNsQixTQUFTLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQzs7Ozs7S0FDbkM7Ozs7SUFJRCxzQ0FBUzs7O0lBQVQ7UUFDSSxxQkFBSSxZQUFZLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxVQUFDLEVBQThCO2dCQUE1QixjQUFVLEVBQUUsa0JBQWM7WUFBTyxPQUFBLENBQUUsSUFBSSxFQUFFLE1BQU0sQ0FBRTtRQUFoQixDQUFnQixDQUFDLENBQUMsQ0FBQztRQUN2RyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMscUJBQXFCLEtBQUssWUFBWSxDQUFDLENBQUMsQ0FBQztZQUM5QyxJQUFJLENBQUMscUJBQXFCLEdBQUcsWUFBWSxDQUFDO1lBQzFDLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztTQUNqQjtLQUNKOzs7O0lBRUQsd0NBQVc7OztJQUFYO1FBQ0ksU0FBUyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7S0FDbkM7O2dCQXZGSixTQUFTLFNBQUM7b0JBQ1AsUUFBUSxFQUFFLFlBQVk7b0JBQ3RCLFFBQVEsRUFBRSx1UUFLYjtvQkFDRyxNQUFNLEVBQUUsQ0FBQywrTkFBK04sQ0FBQztpQkFDNU87Ozs7Z0JBYjZELFVBQVU7Ozt1QkFnQ25FLEtBQUs7MEJBS0wsS0FBSzsyQkFVTCxNQUFNO3lCQUdOLFNBQVMsU0FBQyxRQUFROzs2QkFsRHZCOztTQWNhLGtCQUFrQjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXFGL0I7Ozs7d0JBQ0kscUJBQU0sSUFBSSxPQUFPLENBQUMsVUFBQSxPQUFPLElBQUksT0FBQSxVQUFVLENBQUMsY0FBTSxPQUFBLE9BQU8sRUFBRSxFQUFULENBQVMsQ0FBQyxFQUEzQixDQUEyQixDQUFDLEVBQUE7O29CQUF6RCxTQUF5RCxDQUFDOzs7OztDQUM3RCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmdGVyVmlld0luaXQsIENvbXBvbmVudCwgRG9DaGVjaywgSW5wdXQsIE9uRGVzdHJveSwgRWxlbWVudFJlZiwgVmlld0NoaWxkLCBPdXRwdXQsIEV2ZW50RW1pdHRlciB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XHJcbmltcG9ydCB7IHY0IGFzIHV1aWQgfSBmcm9tICd1dWlkJztcclxuaW1wb3J0IHsgVGFnIH0gZnJvbSBcIi4vdGFnXCI7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICAgIHNlbGVjdG9yOiAndGFnLWNhbnZhcycsXHJcbiAgICB0ZW1wbGF0ZTogYDxjYW52YXMgI2NhbnZhcyBpZD1cInt7IGNhbnZhc0lkIH19XCI+PC9jYW52YXM+XHJcbjxkaXYgaWQ9XCJ7eyB0YWdMaXN0SWQgfX1cIiBjbGFzcz1cInRhZy1jb250YWluZXJcIj5cclxuXHQ8YSBocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApXCIgKm5nRm9yPVwibGV0IHRhZyBvZiB0YWdzXCJcclxuXHRcdFthdHRyLmRhdGEtd2VpZ2h0XT1cInRhZy53ZWlnaHRcIiAoY2xpY2spPVwidGFnQ2xpY2submV4dCh0YWcpXCI+e3sgdGFnLnRleHQgfX08L2E+XHJcbjwvZGl2PlxyXG5gLFxyXG4gICAgc3R5bGVzOiBbYDpob3N0e2Rpc3BsYXk6YmxvY2t9Y2FudmFze2Rpc3BsYXk6YmxvY2s7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJX0udGFnLWNvbnRhaW5lcntkaXNwbGF5Om5vbmV9LnRhZy1jb250YWluZXI+YXtmb250LWZhbWlseTppbmhlcml0IWltcG9ydGFudDtjb2xvcjppbmhlcml0IWltcG9ydGFudDtmb250LXNpemU6aW5oZXJpdCFpbXBvcnRhbnQ7Zm9udC13ZWlnaHQ6aW5oZXJpdCFpbXBvcnRhbnR9YF1cclxufSlcclxuZXhwb3J0IGNsYXNzIFRhZ0NhbnZhc0NvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQsIERvQ2hlY2ssIE9uRGVzdHJveSB7XHJcblxyXG4gICAgcHJpdmF0ZSByZWFkb25seSBfaW5zdGFuY2VJZCA9IHV1aWQoKTtcclxuXHJcbiAgICByZWFkb25seSBjYW52YXNJZCA9IGBjYW52YXMtJHt0aGlzLl9pbnN0YW5jZUlkfWA7XHJcbiAgICByZWFkb25seSB0YWdMaXN0SWQgPSBgdGFncy0ke3RoaXMuX2luc3RhbmNlSWR9YDtcclxuXHJcbiAgICByZWFkb25seSBkZWZhdWx0T3B0aW9uczogVGFnQ2FudmFzT3B0aW9ucyA9IHtcclxuICAgICAgICB0ZXh0Rm9udDogbnVsbCxcclxuICAgICAgICB0ZXh0Q29sb3VyOiBudWxsLFxyXG4gICAgICAgIHdlaWdodEZyb206ICdkYXRhLXdlaWdodCcgLy8gVE9ETzogSGlkZSB0aGlzIGZpZWxkIGZyb20gZXh0ZXJuYWwgbW9kdWxlc1xyXG4gICAgfTtcclxuXHJcbiAgICBjYW52YXNXaWR0aDogbnVtYmVyO1xyXG4gICAgY2FudmFzSGVpZ2h0OiBudW1iZXI7XHJcblxyXG4gICAgcHJpdmF0ZSBfb3B0aW9uczogVGFnQ2FudmFzT3B0aW9ucztcclxuXHJcbiAgICBASW5wdXQoKVxyXG4gICAgdGFnczogVGFnW107XHJcblxyXG4gICAgLy8gVE9ETzogQWRkIHN0cmV0Y2ggKGJvb2xlYW4pIGlucHV0XHJcblxyXG4gICAgQElucHV0KClcclxuICAgIHNldCBvcHRpb25zKHZhbHVlOiBUYWdDYW52YXNPcHRpb25zKSB7XHJcbiAgICAgICAgdGhpcy5fb3B0aW9ucyA9IHZhbHVlO1xyXG4gICAgICAgIHRoaXMuc3RhcnQoKTtcclxuICAgIH1cclxuXHJcbiAgICBnZXQgb3B0aW9ucygpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fb3B0aW9ucztcclxuICAgIH1cclxuXHJcbiAgICBAT3V0cHV0KClcclxuICAgIHRhZ0NsaWNrOiBFdmVudEVtaXR0ZXI8VGFnPiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuXHJcbiAgICBAVmlld0NoaWxkKCdjYW52YXMnKVxyXG4gICAgY2FudmFzOiBFbGVtZW50UmVmO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgZWxlbWVudFJlZjogRWxlbWVudFJlZikge1xyXG5cclxuICAgIH1cclxuXHJcbiAgICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZCB7XHJcbiAgICAgICAgbGV0IGNhbnZhc0VsZW1lbnQgPSB0aGlzLmNhbnZhcy5uYXRpdmVFbGVtZW50IGFzIEhUTUxDYW52YXNFbGVtZW50O1xyXG4gICAgICAgIGNhbnZhc0VsZW1lbnQud2lkdGggPSBNYXRoLnJvdW5kKGNhbnZhc0VsZW1lbnQuY2xpZW50V2lkdGgpO1xyXG4gICAgICAgIGNhbnZhc0VsZW1lbnQuaGVpZ2h0ID0gTWF0aC5yb3VuZChjYW52YXNFbGVtZW50LmNsaWVudEhlaWdodCk7XHJcblxyXG4gICAgICAgIGxldCBzdHlsZSA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50KTtcclxuICAgICAgICB0aGlzLmRlZmF1bHRPcHRpb25zLnRleHRIZWlnaHQgPSBwYXJzZUZsb2F0KHN0eWxlWydmb250LXNpemUnXSk7XHJcblxyXG4gICAgICAgIHRoaXMuc3RhcnQoKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgYXN5bmMgc3RhcnQoKSB7XHJcbiAgICAgICAgbGV0IG1lcmdlZE9wdGlvbnMgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLmRlZmF1bHRPcHRpb25zLCB0aGlzLl9vcHRpb25zKTtcclxuICAgICAgICBhd2FpdCBibGlua0V5ZXMoKTtcclxuICAgICAgICBUYWdDYW52YXMuU3RhcnQodGhpcy5jYW52YXNJZCwgdGhpcy50YWdMaXN0SWQsIG1lcmdlZE9wdGlvbnMpO1xyXG4gICAgfVxyXG5cclxuICAgIGFzeW5jIHVwZGF0ZSgpIHtcclxuICAgICAgICBhd2FpdCBibGlua0V5ZXMoKTtcclxuICAgICAgICBUYWdDYW52YXMuVXBkYXRlKHRoaXMuY2FudmFzSWQpO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgX3ByZXZpb3VzVGFnTGlzdFN0YXRlOiBzdHJpbmc7XHJcblxyXG4gICAgbmdEb0NoZWNrKCk6IHZvaWQge1xyXG4gICAgICAgIGxldCB0YWdMaXN0U3RhdGUgPSBKU09OLnN0cmluZ2lmeSh0aGlzLnRhZ3MubWFwKCh7IHRleHQ6IHRleHQsIHdlaWdodDogd2VpZ2h0IH0pID0+IFsgdGV4dCwgd2VpZ2h0IF0pKTsgLy8gVE9ETzogSW1wcm92ZSBwZXJmb3JtYW5jZSwgdXNlIEtleVZhbHVlRGlmZmVyL0l0ZXJhYmxlRGlmZmVyXHJcbiAgICAgICAgaWYgKHRoaXMuX3ByZXZpb3VzVGFnTGlzdFN0YXRlICE9PSB0YWdMaXN0U3RhdGUpIHtcclxuICAgICAgICAgICAgdGhpcy5fcHJldmlvdXNUYWdMaXN0U3RhdGUgPSB0YWdMaXN0U3RhdGU7XHJcbiAgICAgICAgICAgIHRoaXMudXBkYXRlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIG5nT25EZXN0cm95KCk6IHZvaWQge1xyXG4gICAgICAgIFRhZ0NhbnZhcy5EZWxldGUodGhpcy5jYW52YXNJZCk7XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG4vKipcclxuICAgIEBkZXNjcmlwdGlvbiBXYWl0cyBmb3IgY2hhbmdlIGRldGVjdGlvbiBjeWNsZVxyXG4gICAgQHJldHVybnMgUHJvbWlzZTx2b2lkPlxyXG4qL1xyXG5hc3luYyBmdW5jdGlvbiBibGlua0V5ZXMoKTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgICBhd2FpdCBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHNldFRpbWVvdXQoKCkgPT4gcmVzb2x2ZSgpKSk7XHJcbn1cclxuIl19