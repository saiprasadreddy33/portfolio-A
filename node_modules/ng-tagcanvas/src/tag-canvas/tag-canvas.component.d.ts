import { AfterViewInit, DoCheck, OnDestroy, ElementRef, EventEmitter } from "@angular/core";
import { Tag } from "./tag";
import * as ɵngcc0 from '@angular/core';
export declare class TagCanvasComponent implements AfterViewInit, DoCheck, OnDestroy {
    private elementRef;
    private readonly _instanceId;
    readonly canvasId: string;
    readonly tagListId: string;
    readonly defaultOptions: TagCanvasOptions;
    canvasWidth: number;
    canvasHeight: number;
    private _options;
    tags: Tag[];
    options: TagCanvasOptions;
    tagClick: EventEmitter<Tag>;
    canvas: ElementRef;
    constructor(elementRef: ElementRef);
    ngAfterViewInit(): void;
    start(): Promise<void>;
    update(): Promise<void>;
    private _previousTagListState;
    ngDoCheck(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<TagCanvasComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<TagCanvasComponent, "tag-canvas", never, { "options": "options"; "tags": "tags"; }, { "tagClick": "tagClick"; }, never, never, false>;
}

//# sourceMappingURL=tag-canvas.component.d.ts.map