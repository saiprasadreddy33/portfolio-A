{"ast":null,"code":"import createDelimiters from './createDelimiters';\nimport getText from './getText';\nimport processElements from './processElements';\nimport traverseDOM from './traverseDOM';\nexport default class {\n  constructor(el, options = {}) {\n    // build array of target elements\n    this.elements = [];\n\n    if (typeof el == 'string') {\n      this.elements = Array.from(document.querySelectorAll(el));\n    } else {\n      this.elements = [el];\n    } // set up defaults\n\n\n    this.opts = {\n      returnGenerated: options.returnGenerated || true,\n      delimiter: options.delimiter || 'word',\n      tag: options.tag || 'span',\n      search: options.search || false,\n      customClass: options.customClass || '',\n      generateIndexID: options.generateIndexID || false,\n      generateValueClass: options.generateValueClass || false,\n      // stripHTMLTags: options.stripHTMLTags || false, // not yet supported\n      aria: options.hasOwnProperty('aria') ? options.aria : true,\n      debug: options.debug || false,\n      // new options for vanilla version\n      name: options.name || 'blast'\n    }; // set up Element\n\n    Element = {\n      /* The index of each wrapper element generated by blasting. */\n      blastedIndex: 0,\n\n      /* Whether we're just entering this node. */\n      nodeBeginning: false,\n\n      /* Keep track of the elements generated by Blast so that they can (optionally) be pushed onto the jQuery call stack. */\n      wrappers: Element.wrappers || []\n    }; // create delimiters\n\n    const processedDelimiters = this.createDelimiters();\n    this.opts.processedDelimiter = processedDelimiters.delimiter;\n    this.opts.processedDelimiterRegex = processedDelimiters.delimiterRegex; // initial element processing\n\n    this.processedElements = this.processElements(); // DOM traversal\n\n    if (this.opts.debug) console.time('blast');\n    this.processedElements.map(elem => {\n      traverseDOM(elem, this.opts);\n    });\n    if (this.opts.debug) console.timeEnd('blast');\n  }\n\n  createDelimiters(opts = null) {\n    return createDelimiters(opts || this.opts);\n  }\n\n  getText(el) {\n    return getText(el);\n  }\n\n  processElements(elements = null, opts = null) {\n    return processElements(elements || this.elements, opts || this.opts);\n  }\n\n}","map":{"version":3,"names":["createDelimiters","getText","processElements","traverseDOM","constructor","el","options","elements","Array","from","document","querySelectorAll","opts","returnGenerated","delimiter","tag","search","customClass","generateIndexID","generateValueClass","aria","hasOwnProperty","debug","name","Element","blastedIndex","nodeBeginning","wrappers","processedDelimiters","processedDelimiter","processedDelimiterRegex","delimiterRegex","processedElements","console","time","map","elem","timeEnd"],"sources":["C:/Users/saiprasad/Desktop/portfolio-A/node_modules/blast-vanilla/src/index.js"],"sourcesContent":["import createDelimiters from './createDelimiters'\nimport getText from './getText'\nimport processElements from './processElements'\nimport traverseDOM from './traverseDOM'\n\nexport default class {\n\n    constructor(el, options = {}){\n\n        // build array of target elements\n        this.elements = []\n        if( typeof el == 'string' ){\n            this.elements = Array.from(document.querySelectorAll(el))\n        } else {\n            this.elements = [el]\n        }\n\n        // set up defaults\n        this.opts = {\n            returnGenerated: options.returnGenerated || true,\n            delimiter: options.delimiter || 'word',\n            tag: options.tag || 'span',\n            search: options.search || false,\n            customClass: options.customClass || '',\n            generateIndexID: options.generateIndexID || false,\n            generateValueClass: options.generateValueClass || false,\n            // stripHTMLTags: options.stripHTMLTags || false, // not yet supported\n            aria: options.hasOwnProperty('aria') ? options.aria : true,\n            debug: options.debug || false,\n\n            // new options for vanilla version\n            name: options.name || 'blast'\n        }\n\n        // set up Element\n        Element = {\n            /* The index of each wrapper element generated by blasting. */\n            blastedIndex: 0,\n            /* Whether we're just entering this node. */\n            nodeBeginning: false,\n            /* Keep track of the elements generated by Blast so that they can (optionally) be pushed onto the jQuery call stack. */\n            wrappers: Element.wrappers || []\n        }\n\n        // create delimiters\n        const processedDelimiters = this.createDelimiters()\n        this.opts.processedDelimiter = processedDelimiters.delimiter\n        this.opts.processedDelimiterRegex = processedDelimiters.delimiterRegex\n\n        // initial element processing\n        this.processedElements = this.processElements()\n\n        // DOM traversal\n        if (this.opts.debug) console.time('blast');\n        this.processedElements.map(elem => {\n            traverseDOM(elem, this.opts);\n        })\n        if (this.opts.debug) console.timeEnd('blast');\n\n    }\n\n    createDelimiters(opts = null){\n        return createDelimiters(opts || this.opts)\n    }\n\n    getText(el){\n        return getText(el)\n    }\n\n    processElements(elements = null, opts = null){\n        return processElements(elements || this.elements, opts || this.opts)\n    }\n}\n"],"mappings":"AAAA,OAAOA,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,eAAe,MAAM;EAEjBC,WAAW,CAACC,EAAD,EAAKC,OAAO,GAAG,EAAf,EAAkB;IAEzB;IACA,KAAKC,QAAL,GAAgB,EAAhB;;IACA,IAAI,OAAOF,EAAP,IAAa,QAAjB,EAA2B;MACvB,KAAKE,QAAL,GAAgBC,KAAK,CAACC,IAAN,CAAWC,QAAQ,CAACC,gBAAT,CAA0BN,EAA1B,CAAX,CAAhB;IACH,CAFD,MAEO;MACH,KAAKE,QAAL,GAAgB,CAACF,EAAD,CAAhB;IACH,CARwB,CAUzB;;;IACA,KAAKO,IAAL,GAAY;MACRC,eAAe,EAAEP,OAAO,CAACO,eAAR,IAA2B,IADpC;MAERC,SAAS,EAAER,OAAO,CAACQ,SAAR,IAAqB,MAFxB;MAGRC,GAAG,EAAET,OAAO,CAACS,GAAR,IAAe,MAHZ;MAIRC,MAAM,EAAEV,OAAO,CAACU,MAAR,IAAkB,KAJlB;MAKRC,WAAW,EAAEX,OAAO,CAACW,WAAR,IAAuB,EAL5B;MAMRC,eAAe,EAAEZ,OAAO,CAACY,eAAR,IAA2B,KANpC;MAORC,kBAAkB,EAAEb,OAAO,CAACa,kBAAR,IAA8B,KAP1C;MAQR;MACAC,IAAI,EAAEd,OAAO,CAACe,cAAR,CAAuB,MAAvB,IAAiCf,OAAO,CAACc,IAAzC,GAAgD,IAT9C;MAURE,KAAK,EAAEhB,OAAO,CAACgB,KAAR,IAAiB,KAVhB;MAYR;MACAC,IAAI,EAAEjB,OAAO,CAACiB,IAAR,IAAgB;IAbd,CAAZ,CAXyB,CA2BzB;;IACAC,OAAO,GAAG;MACN;MACAC,YAAY,EAAE,CAFR;;MAGN;MACAC,aAAa,EAAE,KAJT;;MAKN;MACAC,QAAQ,EAAEH,OAAO,CAACG,QAAR,IAAoB;IANxB,CAAV,CA5ByB,CAqCzB;;IACA,MAAMC,mBAAmB,GAAG,KAAK5B,gBAAL,EAA5B;IACA,KAAKY,IAAL,CAAUiB,kBAAV,GAA+BD,mBAAmB,CAACd,SAAnD;IACA,KAAKF,IAAL,CAAUkB,uBAAV,GAAoCF,mBAAmB,CAACG,cAAxD,CAxCyB,CA0CzB;;IACA,KAAKC,iBAAL,GAAyB,KAAK9B,eAAL,EAAzB,CA3CyB,CA6CzB;;IACA,IAAI,KAAKU,IAAL,CAAUU,KAAd,EAAqBW,OAAO,CAACC,IAAR,CAAa,OAAb;IACrB,KAAKF,iBAAL,CAAuBG,GAAvB,CAA2BC,IAAI,IAAI;MAC/BjC,WAAW,CAACiC,IAAD,EAAO,KAAKxB,IAAZ,CAAX;IACH,CAFD;IAGA,IAAI,KAAKA,IAAL,CAAUU,KAAd,EAAqBW,OAAO,CAACI,OAAR,CAAgB,OAAhB;EAExB;;EAEDrC,gBAAgB,CAACY,IAAI,GAAG,IAAR,EAAa;IACzB,OAAOZ,gBAAgB,CAACY,IAAI,IAAI,KAAKA,IAAd,CAAvB;EACH;;EAEDX,OAAO,CAACI,EAAD,EAAI;IACP,OAAOJ,OAAO,CAACI,EAAD,CAAd;EACH;;EAEDH,eAAe,CAACK,QAAQ,GAAG,IAAZ,EAAkBK,IAAI,GAAG,IAAzB,EAA8B;IACzC,OAAOV,eAAe,CAACK,QAAQ,IAAI,KAAKA,QAAlB,EAA4BK,IAAI,IAAI,KAAKA,IAAzC,CAAtB;EACH;;AAlEgB"},"metadata":{},"sourceType":"module"}