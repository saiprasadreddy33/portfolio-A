{"ast":null,"code":"export const characterRanges = {\n  latinPunctuation: \"–—′’'“″„\\\"(«.…¡¿′’'”″“\\\")».…!?\",\n  latinLetters: \"\\\\u0041-\\\\u005A\\\\u0061-\\\\u007A\\\\u00C0-\\\\u017F\\\\u0100-\\\\u01FF\\\\u0180-\\\\u027F\"\n};\nexport const Reg = {\n  /* If the abbreviations RegEx is missing a title abbreviation that you find yourself needing to often escape manually, tweet me: @Shapiro. */\n  abbreviations: new RegExp(\"[^\" + characterRanges.latinLetters + \"](e\\\\.g\\\\.)|(i\\\\.e\\\\.)|(mr\\\\.)|(mrs\\\\.)|(ms\\\\.)|(dr\\\\.)|(prof\\\\.)|(esq\\\\.)|(sr\\\\.)|(jr\\\\.)[^\" + characterRanges.latinLetters + \"]\", \"ig\"),\n  innerWordPeriod: new RegExp(\"[\" + characterRanges.latinLetters + \"]\\.[\" + characterRanges.latinLetters + \"]\", \"ig\"),\n  onlyContainsPunctuation: new RegExp(\"[^\" + characterRanges.latinPunctuation + \"]\"),\n  adjoinedPunctuation: new RegExp(\"^[\" + characterRanges.latinPunctuation + \"]+|[\" + characterRanges.latinPunctuation + \"]+$\", \"g\"),\n  skippedElements: /(script|style|select|textarea)/i,\n  hasPluginClass: new RegExp(\"(^| )\" + 'blast' + \"( |$)\", \"gi\")\n};\n/* Escape likely false-positives of sentence-final periods. Escaping is performed by wrapping a character's ASCII equivalent in double curly brackets,\n   which is then reversed (deencodcoded) after delimiting. */\n\nexport function encodePunctuation(text) {\n  return text\n  /* Escape the following Latin abbreviations and English titles: e.g., i.e., Mr., Mrs., Ms., Dr., Prof., Esq., Sr., and Jr. */\n  .replace(exports.Reg.abbreviations, function (match) {\n    return match.replace(/\\./g, \"{{46}}\");\n  })\n  /* Escape inner-word (non-space-delimited) periods. For example, the period inside \"Blast.js\". */\n  .replace(exports.Reg.innerWordPeriod, function (match) {\n    return match.replace(/\\./g, \"{{46}}\");\n  });\n}\n/* Used to decode both the output of encodePunctuation() and punctuation that has been manually escaped by users. */\n\nexport function decodePunctuation(text) {\n  return text.replace(/{{(\\d{1,3})}}/g, function (fullMatch, subMatch) {\n    return String.fromCharCode(subMatch);\n  });\n}","map":null,"metadata":{},"sourceType":"module"}