{"ast":null,"code":"import { __awaiter } from 'tslib';\nimport { Component, Input, ElementRef, ViewChild, Output, EventEmitter, NgModule } from '@angular/core';\nimport { v4 } from 'uuid';\nimport 'jquery-tagcanvas/tagcanvas';\nimport { CommonModule } from '@angular/common';\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nconst _c0 = [\"canvas\"];\n\nfunction TagCanvasComponent_a_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"a\", 4);\n    ɵngcc0.ɵɵlistener(\"click\", function TagCanvasComponent_a_3_Template_a_click_0_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r4);\n      const tag_r2 = restoredCtx.$implicit;\n      const ctx_r3 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r3.tagClick.next(tag_r2));\n    });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tag_r2 = ctx.$implicit;\n    ɵngcc0.ɵɵattribute(\"data-weight\", tag_r2.weight);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(tag_r2.text);\n  }\n}\n\nlet TagCanvasComponent = /*#__PURE__*/(() => {\n  class TagCanvasComponent {\n    /**\r\n     * @param {?} elementRef\r\n     */\n    constructor(elementRef) {\n      this.elementRef = elementRef;\n      this._instanceId = v4();\n      this.canvasId = `canvas-${this._instanceId}`;\n      this.tagListId = `tags-${this._instanceId}`;\n      this.defaultOptions = {\n        textFont: null,\n        textColour: null,\n        weightFrom: 'data-weight' // TODO: Hide this field from external modules\n\n      };\n      this.tagClick = new EventEmitter();\n    }\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\n\n\n    set options(value) {\n      this._options = value;\n      this.start();\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n\n    get options() {\n      return this._options;\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n\n    ngAfterViewInit() {\n      let\n      /** @type {?} */\n      canvasElement =\n      /** @type {?} */\n      this.canvas.nativeElement;\n      canvasElement.width = Math.round(canvasElement.clientWidth);\n      canvasElement.height = Math.round(canvasElement.clientHeight);\n      let\n      /** @type {?} */\n      style = window.getComputedStyle(this.elementRef.nativeElement);\n      this.defaultOptions.textHeight = parseFloat(style['font-size']);\n      this.start();\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n\n    start() {\n      return __awaiter(this, void 0, void 0, function* () {\n        let\n        /** @type {?} */\n        mergedOptions = Object.assign({}, this.defaultOptions, this._options);\n        yield blinkEyes();\n        TagCanvas.Start(this.canvasId, this.tagListId, mergedOptions);\n      });\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n\n    update() {\n      return __awaiter(this, void 0, void 0, function* () {\n        yield blinkEyes();\n        TagCanvas.Update(this.canvasId);\n      });\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n\n    ngDoCheck() {\n      let\n      /** @type {?} */\n      tagListState = JSON.stringify(this.tags.map(({\n        text: text,\n        weight: weight\n      }) => [text, weight])); // TODO: Improve performance, use KeyValueDiffer/IterableDiffer\n\n      if (this._previousTagListState !== tagListState) {\n        this._previousTagListState = tagListState;\n        this.update();\n      }\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n\n    ngOnDestroy() {\n      TagCanvas.Delete(this.canvasId);\n    }\n\n  }\n\n  TagCanvasComponent.ɵfac = function TagCanvasComponent_Factory(t) {\n    return new (t || TagCanvasComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  TagCanvasComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: TagCanvasComponent,\n    selectors: [[\"tag-canvas\"]],\n    viewQuery: function TagCanvasComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.canvas = _t.first);\n      }\n    },\n    inputs: {\n      options: \"options\",\n      tags: \"tags\"\n    },\n    outputs: {\n      tagClick: \"tagClick\"\n    },\n    decls: 4,\n    vars: 3,\n    consts: [[3, \"id\"], [\"canvas\", \"\"], [1, \"tag-container\", 3, \"id\"], [\"href\", \"javascript:void(0)\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"href\", \"javascript:void(0)\", 3, \"click\"]],\n    template: function TagCanvasComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"canvas\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(3, TagCanvasComponent_a_3_Template, 2, 2, \"a\", 3);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵpropertyInterpolate(\"id\", ctx.canvasId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵpropertyInterpolate(\"id\", ctx.tagListId);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.tags);\n      }\n    },\n    dependencies: [ɵngcc1.NgForOf],\n    styles: [\"[_nghost-%COMP%]{display:block}canvas[_ngcontent-%COMP%]{display:block;width:100%;height:100%}.tag-container[_ngcontent-%COMP%]{display:none}.tag-container[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]{font-family:inherit!important;color:inherit!important;font-size:inherit!important;font-weight:inherit!important}\"]\n  });\n  /** @nocollapse */\n\n  return TagCanvasComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\r\n * \\@description Waits for change detection cycle\r\n * @return {?} Promise<void>\r\n */\n\n\nfunction blinkEyes() {\n  return __awaiter(this, void 0, void 0, function* () {\n    yield new Promise(resolve => setTimeout(() => resolve()));\n  });\n}\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\n\n\nlet TagCanvasModule = /*#__PURE__*/(() => {\n  class TagCanvasModule {}\n\n  TagCanvasModule.ɵfac = function TagCanvasModule_Factory(t) {\n    return new (t || TagCanvasModule)();\n  };\n\n  TagCanvasModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TagCanvasModule\n  });\n  TagCanvasModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [CommonModule]\n  });\n  return TagCanvasModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TagCanvasModule, {\n    declarations: function () {\n      return [TagCanvasComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [TagCanvasComponent];\n    }\n  });\n})();\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\n\n\nclass Tag {\n  /**\r\n   * @param {?=} init\r\n   */\n  constructor(init) {\n    Object.assign(this, init);\n  }\n\n}\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\n\n\nexport { TagCanvasModule, TagCanvasComponent, Tag }; //# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":null,"metadata":{},"sourceType":"module"}