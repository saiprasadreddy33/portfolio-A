{"ast":null,"code":"// getText from Sizzle.js (same as jQuery .text())\nexport default function (elem) {\n  let node;\n  let output = '';\n  let i = 0;\n  const nodeType = elem.nodeType;\n\n  if (!nodeType) {\n    // If no nodeType, this is expected to be an array\n    while (node = elem[i++]) {\n      // Do not traverse comment nodes\n      output += getText(node);\n    }\n  } else if (nodeType === 1 || nodeType === 9 || nodeType === 11) {\n    // Use textContent for elements\n    // innerText usage removed for consistency of new lines (jQuery #11153)\n    if (typeof elem.textContent === 'string') {\n      return elem.textContent;\n    } else {\n      // Traverse its children\n      for (elem = elem.firstChild; elem; elem = elem.nextSibling) {\n        output += getText(elem);\n      }\n    }\n  } else if (nodeType === 3 || nodeType === 4) {\n    return elem.nodeValue;\n  } // Do not include comment or processing instruction nodes\n\n\n  return output;\n}","map":{"version":3,"names":["elem","node","output","i","nodeType","getText","textContent","firstChild","nextSibling","nodeValue"],"sources":["C:/Users/saiprasad/Desktop/portfolio-angular-master/node_modules/blast-vanilla/src/getText.js"],"sourcesContent":["// getText from Sizzle.js (same as jQuery .text())\n\nexport default function(elem){\n\tlet node\n\tlet output = ''\n\tlet i = 0\n\tconst nodeType = elem.nodeType\n\n\tif ( !nodeType ) {\n\t\t// If no nodeType, this is expected to be an array\n\t\twhile ( (node = elem[i++]) ) {\n\t\t\t// Do not traverse comment nodes\n\t\t\toutput += getText( node )\n\t\t}\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\t\t// Use textContent for elements\n\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\n\t\tif ( typeof elem.textContent === 'string' ) {\n\t\t\treturn elem.textContent;\n\t\t} else {\n\t\t\t// Traverse its children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\toutput += getText( elem )\n\t\t\t}\n\t\t}\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\treturn elem.nodeValue;\n\t}\n\t// Do not include comment or processing instruction nodes\n\n\treturn output;\n}\n"],"mappings":"AAAA;AAEA,eAAe,UAASA,IAAT,EAAc;EAC5B,IAAIC,IAAJ;EACA,IAAIC,MAAM,GAAG,EAAb;EACA,IAAIC,CAAC,GAAG,CAAR;EACA,MAAMC,QAAQ,GAAGJ,IAAI,CAACI,QAAtB;;EAEA,IAAK,CAACA,QAAN,EAAiB;IAChB;IACA,OAASH,IAAI,GAAGD,IAAI,CAACG,CAAC,EAAF,CAApB,EAA6B;MAC5B;MACAD,MAAM,IAAIG,OAAO,CAAEJ,IAAF,CAAjB;IACA;EACD,CAND,MAMO,IAAKG,QAAQ,KAAK,CAAb,IAAkBA,QAAQ,KAAK,CAA/B,IAAoCA,QAAQ,KAAK,EAAtD,EAA2D;IACjE;IACA;IACA,IAAK,OAAOJ,IAAI,CAACM,WAAZ,KAA4B,QAAjC,EAA4C;MAC3C,OAAON,IAAI,CAACM,WAAZ;IACA,CAFD,MAEO;MACN;MACA,KAAMN,IAAI,GAAGA,IAAI,CAACO,UAAlB,EAA8BP,IAA9B,EAAoCA,IAAI,GAAGA,IAAI,CAACQ,WAAhD,EAA8D;QAC7DN,MAAM,IAAIG,OAAO,CAAEL,IAAF,CAAjB;MACA;IACD;EACD,CAXM,MAWA,IAAKI,QAAQ,KAAK,CAAb,IAAkBA,QAAQ,KAAK,CAApC,EAAwC;IAC9C,OAAOJ,IAAI,CAACS,SAAZ;EACA,CAzB2B,CA0B5B;;;EAEA,OAAOP,MAAP;AACA"},"metadata":{},"sourceType":"module"}