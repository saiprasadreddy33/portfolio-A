{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let ToggleNavMenuDirective = /*#__PURE__*/(() => {\n  class ToggleNavMenuDirective {\n    constructor(elementRef, renderer) {\n      this.elementRef = elementRef;\n      this.renderer = renderer;\n    }\n\n    onClick() {\n      if (this.elementRef.nativeElement.classList.contains(this.className)) {\n        this.renderer.removeClass(this.elementRef.nativeElement, this.className);\n      } else {\n        this.renderer.addClass(this.elementRef.nativeElement, this.className);\n      }\n    }\n\n    onMouseLeave() {\n      if (this.elementRef.nativeElement.classList.contains(this.className)) {\n        this.renderer.removeClass(this.elementRef.nativeElement, this.className);\n      }\n    }\n\n  }\n\n  ToggleNavMenuDirective.ɵfac = function ToggleNavMenuDirective_Factory(t) {\n    return new (t || ToggleNavMenuDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n  };\n\n  ToggleNavMenuDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: ToggleNavMenuDirective,\n    selectors: [[\"\", \"appToggleNavMenu\", \"\"]],\n    hostBindings: function ToggleNavMenuDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function ToggleNavMenuDirective_click_HostBindingHandler() {\n          return ctx.onClick();\n        })(\"mouseleave\", function ToggleNavMenuDirective_mouseleave_HostBindingHandler() {\n          return ctx.onMouseLeave();\n        });\n      }\n    },\n    inputs: {\n      className: [\"customClassName\", \"className\"]\n    },\n    standalone: true\n  });\n  return ToggleNavMenuDirective;\n})();","map":null,"metadata":{},"sourceType":"module"}